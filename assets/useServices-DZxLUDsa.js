import{s as n,r as u}from"./index-BD5u5Cxo.js";const d={async getAll(){const{data:a,error:r}=await n.from("services").select("*").order("display_order",{ascending:!0}).order("created_at",{ascending:!1});if(r)throw r;return a||[]},async getFeatured(){const{data:a,error:r}=await n.from("services").select("*").eq("is_featured",!0).order("display_order",{ascending:!0}).order("created_at",{ascending:!1});if(r)throw r;return a||[]},async getById(a){const{data:r,error:c}=await n.from("services").select("*").eq("id",a).single();if(c)throw c;return r},async create(a){const{data:r,error:c}=await n.from("services").insert([a]).select().single();if(c)throw c;return r},async update(a,r){const{data:c,error:l}=await n.from("services").update({...r,updated_at:new Date().toISOString()}).eq("id",a).select().single();if(l)throw l;return c},async delete(a){const{error:r}=await n.from("services").delete().eq("id",a);if(r)throw r},async toggleFeatured(a){const r=await this.getById(a);if(!r)throw new Error("Service not found");return this.update(a,{is_featured:!r.is_featured})},async uploadImage(a,r="services"){const c=a.name.split(".").pop(),l=`${Math.random()}.${c}`,f=`${r}/${l}`,{error:g}=await n.storage.from("images").upload(f,a);if(g)throw g;const{data:w}=n.storage.from("images").getPublicUrl(f);return w.publicUrl}},F=(a=!1)=>{const[r,c]=u.useState([]),[l,f]=u.useState(!0),[g,w]=u.useState(null),[p,v]=u.useState([]),h=u.useCallback(async()=>{try{f(!0),w(null);const t=a?await d.getFeatured():await d.getAll();if(c(t),!a){const e=t.filter(s=>s.is_featured);v(e)}}catch(t){w(t instanceof Error?t.message:"Error loading services")}finally{f(!1)}},[a]);return u.useEffect(()=>{h()},[h]),{services:r,featuredServices:p,loading:l,error:g,refetch:h,createService:async t=>{try{const e=await d.create(t);return c(s=>[e,...s]),e}catch(e){throw console.log(e),e}},updateService:async(t,e)=>{try{const s=await d.update(t,e);return c(o=>o.map(i=>i.id===t?s:i)),e.is_featured!==void 0&&v(o=>e.is_featured?[...o,s]:o.filter(i=>i.id!==t)),s}catch(s){throw console.log(s),s}},deleteService:async t=>{try{await d.delete(t),c(e=>e.filter(s=>s.id!==t)),v(e=>e.filter(s=>s.id!==t))}catch(e){throw console.log(e),e}},toggleFeatured:async t=>{try{const e=r.find(o=>o.id===t);if(!e)return;const s=await d.update(t,{is_featured:!e.is_featured});return c(o=>o.map(i=>i.id===t?s:i)),v(o=>s.is_featured?[...o,s]:o.filter(i=>i.id!==t)),s}catch(e){throw console.log(e),e}},uploadImage:async t=>{try{return await d.uploadImage(t)}catch(e){throw console.log(e),e}}}};export{F as u};
